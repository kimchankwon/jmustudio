{"version":3,"sources":["routes.js","data/tutors.js","layout/PublicLayout.js","pages/HomePage.js","pages/AboutUsPage.js","pages/contactus/ContactUsPage.js","pages/tutors/TutorsPage.js","pages/tutors/IndividualTutorPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["id","name","Header","Layout","Content","Footer","SubMenu","Menu","PublicLayout","props","goToPage","route","history","push","key","className","style","position","width","mode","theme","onClick","Item","routes","SyncOutlined","spin","title","onTitleClick","tutors","map","padding","marginTop","minHeight","children","textAlign","HelloPage","AboutUsPage","ContactUsPage","TutorsPage","listData","i","href","avatar","description","content","itemLayout","size","dataSource","renderItem","item","extra","alt","src","Meta","IndividualTutorPage","tutorName","useParams","NotFoundPage","status","subTitle","pages","exact","path","component","HomePage","layout","App","createBrowserHistory","index","Component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.002dbc0f.chunk.js","sourcesContent":["export default {\r\n  home: \"/home\",\r\n  index: \"/\",\r\n  about: \"/about\",\r\n  contact: \"/contact\",\r\n  tutors: \"/tutors\",\r\n  individualtutor: \"/tutor/:tutorName\",\r\n  tutornoid: \"/tutor\"\r\n};\r\n","export default [\r\n  { id: \"jaekwon\", name: \"Jae Kwon Kim\" },\r\n  { id: \"daniel\", name: \"Daniel Test Kim\" }\r\n];\r\n","import React from \"react\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport routes from \"../routes\";\r\n\r\nimport tutors from \"../data/tutors\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst PublicLayout = props => {\r\n\r\n  const goToPage = route => {\r\n    props.history.push(route.key);\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header className=\"header\" style={{ position: 'fixed', width: '100%', 'background-color': 'black' }}>\r\n        <Menu mode=\"horizontal\" theme='dark' onClick={goToPage} style={{ 'background-color': 'black', 'font-family': 'serif' }}>\r\n          <Menu.Item key={routes.home}><SyncOutlined spin /></Menu.Item>\r\n          <Menu.Item key={routes.home}>Home</Menu.Item>\r\n          <Menu.Item key={routes.about}>About Us</Menu.Item>\r\n          <SubMenu title=\"Tutors\" key={routes.tutors} onTitleClick={goToPage}>\r\n            {tutors.map(({id, name}) => {\r\n              return <Menu.Item key={`${routes.tutornoid}/${id}`}>{name}</Menu.Item>\r\n            })}\r\n          </SubMenu>\r\n          <Menu.Item key={routes.contact}>Contact Us</Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n        <div className=\"site-layout-content\" style={{ padding: 24, minHeight: 480 }}>\r\n          {props.children}\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>JMU Studio Â©2020</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PublicLayout;\r\n","import React from \"react\";\r\n\r\nconst HelloPage = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>\r\n          This is the home page\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelloPage;\r\n","import React from \"react\";\r\n\r\nconst AboutUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        This is the About Us Page\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;\r\n","import React from \"react\";\r\n// import Enquiry from \"./Enquiry\";\r\n\r\nconst ContactUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        This is the Contact Us Page\r\n      </h1>\r\n      <p>\r\n        email: jmustudio@gmail.com\r\n      </p>\r\n      {/* <Enquiry/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPage;\r\n","import React from \"react\";\r\nimport { List, Avatar } from 'antd';\r\nimport tutors from \"../../data/tutors\";\r\nimport routes from \"../../routes\";\r\n\r\nconst TutorsPage = () => {\r\n\r\n  const listData = [];\r\n  for (let i = 0; i < 1; i++) {\r\n    listData.push({\r\n      href: `${routes.tutornoid}/${tutors[0].id}`,\r\n      title: `${tutors[0].name}`,\r\n      avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n      description:\r\n        'Description part.',\r\n      content:\r\n        'More description if needed.',\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      // pagination={{\r\n      //   onChange: page => {\r\n      //     console.log(page);\r\n      //   },\r\n      //   pageSize: 3,\r\n      // }}\r\n      dataSource={listData}\r\n      // footer={\r\n      //   <div>\r\n      //     <b>ant design</b> footer part\r\n      //   </div>\r\n      // }\r\n      renderItem={item => (\r\n        <List.Item\r\n          key={item.title}\r\n          // actions={[\r\n          //   <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n          //   <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n          //   <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n          // ]}\r\n          extra={\r\n            <img\r\n              width={272}\r\n              alt=\"logo\"\r\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />\r\n          }\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={item.avatar} />}\r\n            title={<a href={item.href}>{item.title}</a>}\r\n            description={item.description}\r\n          />\r\n          {item.content}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorsPage;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst IndividualTutorPage = () => {\r\n  \r\n  const { tutorName } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>\r\n          {tutorName} Tutor\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualTutorPage;","import React from 'react';\r\nimport { Result } from \"antd\";\r\n\r\nconst NotFoundPage = () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n  />\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\";\n\nimport PublicLayout from \"./layout/PublicLayout\";\n\nimport HomePage from \"./pages/HomePage\";\nimport AboutUsPage from \"./pages/AboutUsPage\";\nimport ContactUsPage from \"./pages/contactus/ContactUsPage\";\nimport TutorsPage from \"./pages/tutors/TutorsPage\";\nimport IndividualTutorPage from \"./pages/tutors/IndividualTutorPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nimport { createBrowserHistory } from \"history\";\n\nconst pages = [\n  // Public pages\n  {\n    exact: true,\n    path: routes.home,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.index,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.about,\n    component: AboutUsPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.tutors,\n    component: TutorsPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.individualtutor,\n    component: IndividualTutorPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.contact,\n    component: ContactUsPage,\n    layout: PublicLayout,\n  }\n];\n\nconst App = () => {\n  const history = createBrowserHistory();\n\n  return (\n    <Router history={history}>\n      <Switch>\n        {pages.map(\n          (\n            { exact, path, component: Component, layout: Layout, props },\n            index\n          ) => (\n            <Route\n              key={index}\n              exact={exact}\n              path={path}\n              render={(props) => (\n                <Layout history={props.history}>\n                  <Component {...props} />\n                </Layout>\n              )}\n            />\n          )\n        )}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
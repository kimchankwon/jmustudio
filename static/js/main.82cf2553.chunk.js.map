{"version":3,"sources":["routes.js","layout/PublicLayout.js","pages/HomePage.js","pages/AboutUsPage.js","pages/contactus/Enquiry.js","pages/contactus/ContactUsPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["home","index","about","contact","Header","Layout","Content","Footer","SubMenu","Menu","PublicLayout","props","className","style","position","width","mode","theme","onClick","route","history","push","key","Item","routes","title","tutor","padding","marginTop","minHeight","children","textAlign","HelloPage","AboutUsPage","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Enquiry","name","onFinish","values","console","log","label","rules","type","min","max","TextArea","offset","htmlType","ContactUsPage","NotFoundPage","status","subTitle","pages","exact","path","component","HomePage","App","createBrowserHistory","map","Component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.82cf2553.chunk.js","sourcesContent":["export default {\r\n  home: \"/home\",\r\n  index: \"/\",\r\n  about: \"/about\",\r\n  contact: \"/contact\",\r\n};\r\n","import React from \"react\";\r\nimport { Layout, Menu } from 'antd';\r\nimport routes from \"../routes\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst PublicLayout = props => {\r\n\r\n  const goToPage = route => {\r\n    props.history.push(route.key);\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header className=\"header\" style={{ position: 'fixed', width: '100%', 'background-color': 'black' }}>\r\n        <div className=\"logo\" />\r\n        <Menu mode=\"horizontal\" theme='dark' onClick={goToPage} style={{ 'background-color': 'black', 'font-family': 'serif' }}>\r\n          <Menu.Item key={routes.home}>Home</Menu.Item>\r\n          <Menu.Item key={routes.about}>About Us</Menu.Item>\r\n          <SubMenu title=\"Tutors\">\r\n            <Menu.Item key={routes.tutor}>Jae Kwon Kim</Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item key={routes.contact}>Contact Us</Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n        <div className=\"site-layout-content\" style={{ padding: 24, minHeight: 480 }}>\r\n          {props.children}\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>JMU Studio Â©2020</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PublicLayout;\r\n","import React from \"react\";\r\n\r\nconst HelloPage = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>\r\n          hello\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelloPage;\r\n","import React from \"react\";\r\n\r\nconst AboutUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n      <h1>\r\n        page about us lol\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;\r\n","import React from 'react';\r\nimport { Form, Input, InputNumber, Button } from 'antd';\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nconst Enquiry = () => {\r\n  const onFinish = values => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item name={['user', 'name']} label=\"Name\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'age']} label=\"Age\" rules={[{ type: 'number', min: 0, max: 99 }]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'website']} label=\"Website\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'introduction']} label=\"Introduction\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Enquiry","import React from \"react\";\r\nimport Enquiry from \"./Enquiry\";\r\n\r\nconst ContactUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        email: hi@gmail.com\r\n      </h1>\r\n      <Enquiry/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPage;\r\n","import React from 'react';\r\nimport { Result } from \"antd\";\r\n\r\nconst NotFoundPage = () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n  />\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\";\n\nimport PublicLayout from \"./layout/PublicLayout\";\n\nimport HomePage from \"./pages/HomePage\";\nimport AboutUsPage from \"./pages/AboutUsPage\";\nimport ContactUsPage from \"./pages/contactus/ContactUsPage\";\n// import BookDetailsPage from \"./pages/BookDetail/BookDetailsPage\";\n// import CollectionsPage from \"./pages/CollectionDetails/CollectionsPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nimport { createBrowserHistory } from \"history\";\n\nconst pages = [\n  // Public pages\n  {\n    exact: true,\n    path: routes.home,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.index,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.about,\n    component: AboutUsPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.contact,\n    component: ContactUsPage,\n    layout: PublicLayout,\n  }\n];\n\nconst App = () => {\n  const history = createBrowserHistory();\n\n  return (\n    <Router history={history}>\n      <Switch>\n        {pages.map(\n          (\n            { exact, path, component: Component, layout: Layout, props },\n            index\n          ) => (\n            <Route\n              key={index}\n              exact={exact}\n              path={path}\n              render={(props) => (\n                <Layout history={props.history}>\n                  <Component {...props} />\n                </Layout>\n              )}\n            />\n          )\n        )}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
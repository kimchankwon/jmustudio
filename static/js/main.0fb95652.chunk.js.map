{"version":3,"sources":["pages/LoadingPage.js","routes.js","data/tutors.js","layout/PublicLayout.js","pages/HomePage.js","pages/AboutUsPage.js","pages/contactus/ContactUsPage.js","pages/tutors/TutorsPage.js","data/tutorInformation.js","pages/tutors/IndividualTutorPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js","data/jaekwon1.jpg"],"names":["LoadingPage","id","name","Header","Layout","Content","Footer","PublicLayout","props","useState","loading","setLoading","currentKey","setCurrentKey","goToPage","route","key","history","push","currentKeyIs","useEffect","location","pathname","style","position","width","background","zIndex","className","theme","mode","onClick","defaultSelectedKeys","fontFamily","Item","routes","SyncOutlined","spin","float","SubMenu","title","onTitleClick","backgroundColor","color","tutors","map","padding","marginTop","children","textAlign","HomePage","AboutUsPage","ContactUsPage","Meta","Card","TutorsPage","hoverable","cover","alt","src","jaekwon1","description","jaekwon","website","daniel","IndividualTutorPage","tutorID","useParams","tutorInformation","NotFoundPage","status","subTitle","pages","exact","path","component","layout","App","index","Component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0fb95652.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LoadingPage = () => (\r\n  <div>\r\n    <h1>Loading</h1>\r\n  </div>\r\n)\r\n\r\nexport default LoadingPage\r\n","export default {\r\n  home: \"/home\",\r\n  index: \"/\",\r\n  about: \"/about\",\r\n  contact: \"/contact\",\r\n  tutors: \"/tutors\",\r\n  individualtutor: \"/tutor/:tutorID\",\r\n  tutornoid: \"/tutor\"\r\n};\r\n","export default [\r\n  { id: \"jaekwon\", name: \"Jae Kwon Kim\" },\r\n  { id: \"daniel\", name: \"Daniel Test Kim\" }\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport LoadingPage from \"../pages/LoadingPage\";\r\nimport routes from \"../routes\";\r\n\r\nimport tutors from \"../data/tutors\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst PublicLayout = props => {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentKey, setCurrentKey] = useState(\"\");\r\n\r\n  const goToPage = route => {\r\n    if (route.key !== currentKey) {\r\n      props.history.push(route.key);\r\n    }\r\n  }\r\n\r\n  const currentKeyIs = (key) => {\r\n    return currentKey === key;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setCurrentKey(props.history.location.pathname);\r\n    setLoading(false);\r\n  }, [props.history.location.pathname]);\r\n\r\n  return (\r\n    loading ?\r\n      <LoadingPage />\r\n      :\r\n      <Layout>\r\n        <Header style={{ position: 'fixed', width: '100%', background: 'black', zIndex: 100 }}>\r\n          <Menu className=\"menu\" theme=\"dark\" mode=\"horizontal\" onClick={goToPage} defaultSelectedKeys={[`${currentKey}`]} style={{background: 'black', fontFamily: 'Open Sans'}}>\r\n            <Menu.Item className=\"menuitem\" key={routes.index}><SyncOutlined spin />LOGO <SyncOutlined spin /></Menu.Item>\r\n            {currentKeyIs(\"/tutors\") ?\r\n              <Menu.Item className=\"menuitem\" key={routes.tutors} style={{float: 'right'}}>TUTORS</Menu.Item>\r\n              :\r\n              <Menu.SubMenu className=\"submenu\" title=\"TUTORS\" key={routes.tutors} onTitleClick={goToPage} style={{float: 'right', backgroundColor: currentKeyIs(\"/tutors\") ? 'white' : '', color: currentKeyIs(\"/tutors\") ? 'black' : ''}}>\r\n                {tutors.map(({id, name}) => {\r\n                  return <Menu.Item className=\"submenuitem\" key={`${routes.tutornoid}/${id}`}>{name}</Menu.Item>\r\n                })}\r\n              </Menu.SubMenu>\r\n            }\r\n            <Menu.Item className=\"menuitem\" key={routes.contact} style={{float: 'right'}}>CONTACT</Menu.Item>\r\n            <Menu.Item className=\"menuitem\" key={routes.about} style={{float: 'right'}}>ABOUT</Menu.Item>\r\n            <Menu.Item className=\"menuitem\" key={routes.home} style={{float: 'right'}}>HOME</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n          <div className=\"site-layout-content\">\r\n            {props.children}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>JMU Studio Â©2020 - 1.0.0</Footer>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default PublicLayout;\r\n","import React from \"react\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>\r\n          This is the home page\r\n        </h1>\r\n        <h1>\r\n          many description stuffs\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Some motto\r\n      </h1>\r\n      <h1>\r\n        we care about our students\r\n      </h1>\r\n      <h1>\r\n        founded in 2020\r\n      </h1>\r\n      <h1>\r\n        Location: Parramatta\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;\r\n","import React from \"react\";\r\n// import Enquiry from \"./Enquiry\";\r\n\r\nconst ContactUsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        email: jmustudio@gmail.com\r\n      </h1>\r\n      <h1>\r\n        Facebook: facebook.com/jmustudio\r\n      </h1>\r\n      {/* <Enquiry/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPage;\r\n","import React from \"react\";\r\nimport { Card } from 'antd';\r\nimport tutors from \"../../data/tutors\";\r\nimport routes from \"../../routes\";\r\n\r\nimport jaekwon1 from \"../../data/jaekwon1.jpg\"\r\n\r\nconst { Meta } = Card;\r\n\r\nconst TutorsPage = props => {\r\n  return (\r\n    tutors.map(({id, name}) => {\r\n    return  <Card\r\n                onClick={() => {props.history.push(`${routes.tutornoid}/${id}`)}}\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img alt=\"example\" src={jaekwon1} />}\r\n              >\r\n                <Meta title={name} description=\"desc\" />\r\n              </Card>\r\n    })\r\n  );\r\n};\r\n\r\nexport default TutorsPage;","// query is id\r\n\r\nexport default {\r\n  jaekwon: {\r\n    name: \"Jae Kwon Kim\",\r\n    website: \"https://www.facebook.com/jaekwon.baritone/\"\r\n  },\r\n  daniel: {\r\n    name: \"Daniel Test Kim\",\r\n    website: \"https://www.facebook.com/jaekwon.baritone/\"\r\n  }\r\n};","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport tutorInformation from \"../../data/tutorInformation\";\r\n\r\nconst IndividualTutorPage = () => {\r\n  const { tutorID } = useParams();\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>\r\n          {tutorInformation[tutorID].name} Tutor\r\n        </h1>\r\n        <p>\r\n          {tutorInformation[tutorID].website}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualTutorPage;","import React from 'react';\r\nimport { Result } from \"antd\";\r\n\r\nconst NotFoundPage = () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n  />\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\";\n\nimport PublicLayout from \"./layout/PublicLayout\";\n\nimport HomePage from \"./pages/HomePage\";\nimport AboutUsPage from \"./pages/AboutUsPage\";\nimport ContactUsPage from \"./pages/contactus/ContactUsPage\";\nimport TutorsPage from \"./pages/tutors/TutorsPage\";\nimport IndividualTutorPage from \"./pages/tutors/IndividualTutorPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nconst pages = [\n  // Public pages\n  {\n    exact: true,\n    path: routes.home,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.index,\n    component: HomePage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.about,\n    component: AboutUsPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.tutors,\n    component: TutorsPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.individualtutor,\n    component: IndividualTutorPage,\n    layout: PublicLayout,\n  },\n  {\n    exact: true,\n    path: routes.contact,\n    component: ContactUsPage,\n    layout: PublicLayout,\n  }\n];\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Switch>\n        {pages.map(\n          (\n            { exact, path, component: Component, layout: Layout, props },\n            index\n          ) => (\n            <Route\n              key={index}\n              exact={exact}\n              path={path}\n              render={(props) => (\n                <Layout history={props.history}>\n                  <Component {...props} />\n                </Layout>\n              )}\n            />\n          )\n        )}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/jaekwon1.932b6ebb.jpg\";"],"sourceRoot":""}